[{"path":"/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to npi","title":"Contributing to npi","text":"Thanks considering contributing npi! ‚Äôs people like make rewarding create, maintain, improve package. npi open source project created maintained Frank Farach spare time.","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to npi","text":"project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How you can contribute","title":"Contributing to npi","text":"several ways can contribute project, greatly appreciated. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"/CONTRIBUTING.html","id":"share-the-love","dir":"","previous_headings":"How you can contribute","what":"Share the love","title":"Contributing to npi","text":"Think npi useful? Let others discover , telling person, via Twitter blog post.","code":""},{"path":"/CONTRIBUTING.html","id":"ask-a-question","dir":"","previous_headings":"How you can contribute","what":"Ask a question","title":"Contributing to npi","text":"Using npi got stuck? Browse documentation issues see can find solution. Still stuck? Post question issue GitHub. ‚Äôll best address , questions often lead better documentation discovery bugs.","code":""},{"path":"/CONTRIBUTING.html","id":"propose-an-idea","dir":"","previous_headings":"How you can contribute","what":"Propose an idea","title":"Contributing to npi","text":"idea new npi feature? Take look issue list see isn‚Äôt included suggested yet. , suggest idea issue GitHub. can‚Äôt promise implement idea, helps : Explain detail work. Keep scope narrow possible. See want contribute code idea. ‚Äôre also welcome join discussion existing issue.","code":""},{"path":"/CONTRIBUTING.html","id":"report-a-bug","dir":"","previous_headings":"How you can contribute","what":"Report a bug","title":"Contributing to npi","text":"Using npi think ‚Äôve discovered bug? ‚Äôs annoying! Don‚Äôt let others experience report issue GitHub can fix . good bug report makes easier limited time work project, kindly include following report: operating system name version (e.g.¬†Mac OS 10.13.6) details local setup might helpful troubleshooting, output running sessionInfo() R console Detailed steps reproduce bug, preferably form minimum reproducible example","code":""},{"path":"/CONTRIBUTING.html","id":"improve-the-documentation","dir":"","previous_headings":"How you can contribute","what":"Improve the documentation","title":"Contributing to npi","text":"Noticed typo? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"How you can contribute > Improve the documentation","what":"Function documentation","title":"Contributing to npi","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository. Look file name function. Propose file change update function documentation roxygen comments (starting #').","code":""},{"path":"/CONTRIBUTING.html","id":"contribute-code","dir":"","previous_headings":"How you can contribute","what":"Contribute code","title":"Contributing to npi","text":"Care fix bugs implement new functionality npi? Awesome! üëè look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to npi","text":"Please follow GitHub flow development. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream master. Open RStudio project file (.Rproj). Write code. Test code (bonus points adding unit tests). Document code (see function documentation ). Check code devtools::check() aim 0 errors warnings. Commit push changes. Submit pull request. Additionally: npi follows tidyverse style detailed tidyverse style guide. Please lint code lintr::lint_file() prior committing. npi uses roxygen2 documentation. running devtools::document(), ensure ‚Äôve update roxygen2 latest version used @noRd functions exported.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2018 Frank Farach Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/npi.html","id":"search-registry","dir":"Articles","previous_headings":"","what":"Search registry","title":"Introduction to npi","text":"explore organizational providers primary locations New York City, use city argument npi_search(). nyc dataset finds 10 organizational providers primary locations New York City, since 10 default number records returned npi_search(). response tibble high-cardinality data organized list columns. search arguments function include npi number, enumeration type, taxonomy description, individual provider‚Äôs first name, individual provider‚Äôs last name, use first name alias, organization name, address purpose, state, postal code, country code, limit. Additionally, one search argument can used . Visit function‚Äôs help page via ?npi_search installing loading package details.","code":"nyc <- npi_search(city = \"New York City\") #> Requesting records 0-10... nyc #> # A tibble: 10 √ó 11 #>       npi enumeration_type basic    other_names identifiers taxonomies addresses #>  *  <int> <chr>            <list>   <list>      <list>      <list>     <list>    #>  1 1.60e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  2 1.71e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  3 1.35e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  4 1.99e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  5 1.77e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  6 1.08e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  7 1.59e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  8 1.85e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  9 1.63e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #> 10 1.37e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #> # ‚Ä¶ with 4 more variables: practice_locations <list>, endpoints <list>, #> #   created_date <dttm>, last_updated_date <dttm> nyc_multi <- npi_search(city = \"New York City\", state = \"NY\", enumeration_type = \"org\") #> Requesting records 0-10... nyc_multi #> # A tibble: 10 √ó 11 #>       npi enumeration_type basic    other_names identifiers taxonomies addresses #>  *  <int> <chr>            <list>   <list>      <list>      <list>     <list>    #>  1 1.35e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  2 1.02e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  3 1.25e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  4 1.72e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  5 1.73e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  6 1.24e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  7 1.50e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  8 1.54e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  9 1.32e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #> 10 1.58e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #> # ‚Ä¶ with 4 more variables: practice_locations <list>, endpoints <list>, #> #   created_date <dttm>, last_updated_date <dttm>"},{"path":"/articles/npi.html","id":"increasing-number-of-records-returned","dir":"Articles","previous_headings":"","what":"Increasing number of records returned","title":"Introduction to npi","text":"limit argument lets set maximum records return 1 1200 inclusive. default 10. using npi_search(), searches greater 200 records (example 300 records) result multiple API calls. API returns 200 records per request. function make multiple calls needed still return tibble.","code":"nyc_25 <- npi_search(city = \"New York City\", limit = 25) #> Requesting records 0-25... nyc_25 #> # A tibble: 25 √ó 11 #>       npi enumeration_type basic    other_names identifiers taxonomies addresses #>  *  <int> <chr>            <list>   <list>      <list>      <list>     <list>    #>  1 1.60e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  2 1.71e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  3 1.35e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  4 1.99e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  5 1.77e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  6 1.08e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  7 1.59e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  8 1.85e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  9 1.63e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #> 10 1.37e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #> # ‚Ä¶ with 15 more rows, and 4 more variables: practice_locations <list>, #> #   endpoints <list>, created_date <dttm>, last_updated_date <dttm> nyc_300 <- npi_search(city = \"New York City\", limit = 300) #> Requesting records 0-200... #> Requesting records 200-300... nyc_300 #> # A tibble: 300 √ó 11 #>       npi enumeration_type basic    other_names identifiers taxonomies addresses #>  *  <int> <chr>            <list>   <list>      <list>      <list>     <list>    #>  1 1.60e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  2 1.71e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  3 1.35e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  4 1.99e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  5 1.77e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  6 1.08e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  7 1.59e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  8 1.85e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  9 1.63e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #> 10 1.37e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #> # ‚Ä¶ with 290 more rows, and 4 more variables: practice_locations <list>, #> #   endpoints <list>, created_date <dttm>, last_updated_date <dttm>"},{"path":"/articles/npi.html","id":"obtaining-more-human-readable-output","dir":"Articles","previous_headings":"","what":"Obtaining more human-readable output","title":"Introduction to npi","text":"npi_summarize() provides human-readable overview output already obtained npi_search(). Additionally, users can flatten list columns using npi_flatten(). Alternatively, individual columns can flattened npi using cols argument. columns specified flattened returned npi column default.","code":"npi_summarize(nyc) #> Warning: The `.sep` argument of `unnest()` is deprecated as of tidyr 1.0.0. #> Use `names_sep = '_'` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. #> # A tibble: 10 √ó 6 #>           npi name      enumeration_type primary_practic‚Ä¶ phone primary_taxonomy #>         <int> <chr>     <chr>            <chr>            <chr> <chr>            #>  1 1598295529 MUHAMMAD‚Ä¶ Individual       475 SEAVIEW AVE‚Ä¶ 718-‚Ä¶ Student in an O‚Ä¶ #>  2 1710977137 JOHN SCR‚Ä¶ Individual       115 WEST 27TH S‚Ä¶ 212-‚Ä¶ Social Worker C‚Ä¶ #>  3 1346224904 NICULAE ‚Ä¶ Organization     10 EAST 38TH ST‚Ä¶ 212-‚Ä¶ Internal Medici‚Ä¶ #>  4 1992776843 NANCY RA‚Ä¶ Individual       312 E 94 ST, NE‚Ä¶ 212-‚Ä¶ Nurse Practitio‚Ä¶ #>  5 1770554206 LYNN KEP‚Ä¶ Individual       205 E 64 ST SUI‚Ä¶ 212-‚Ä¶ Physician Assis‚Ä¶ #>  6 1083687214 SCOTT RI‚Ä¶ Individual       33 WEST 42ND ST‚Ä¶ 212-‚Ä¶ Optometrist      #>  7 1588637987 CHUNG SO‚Ä¶ Individual       901 SIXTH AVENU‚Ä¶ 212-‚Ä¶ Optometrist      #>  8 1851366066 BENJAMIN‚Ä¶ Individual       150 E 37TH ST A‚Ä¶ 212-‚Ä¶ Psychiatry & Ne‚Ä¶ #>  9 1629046321 KENNETH ‚Ä¶ Individual       530 FIRST AVE S‚Ä¶ 212-‚Ä¶ Otolaryngology   #> 10 1366405755 HAROLD O‚Ä¶ Individual       1737 YORK AVE S‚Ä¶ 212-‚Ä¶ Dentist npi_flatten(nyc) #> Warning: The `.sep` argument of `unnest()` is deprecated as of tidyr 1.0.0. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. #> # A tibble: 28 √ó 43 #>           npi basic_first_name basic_last_name basic_middle_na‚Ä¶ basic_credential #>         <int> <chr>            <chr>           <chr>            <chr>            #>  1 1083687214 SCOTT            RICHTER         JAY              O.D.             #>  2 1083687214 SCOTT            RICHTER         JAY              O.D.             #>  3 1083687214 SCOTT            RICHTER         JAY              O.D.             #>  4 1083687214 SCOTT            RICHTER         JAY              O.D.             #>  5 1346224904 NA               NA              NA               NA               #>  6 1346224904 NA               NA              NA               NA               #>  7 1346224904 NA               NA              NA               NA               #>  8 1346224904 NA               NA              NA               NA               #>  9 1366405755 HAROLD           ORT             DAVID            DDS              #> 10 1366405755 HAROLD           ORT             DAVID            DDS              #> # ‚Ä¶ with 18 more rows, and 38 more variables: basic_sole_proprietor <chr>, #> #   basic_gender <chr>, basic_enumeration_date <chr>, basic_last_updated <chr>, #> #   basic_reactivation_date <chr>, basic_status <chr>, #> #   basic_deactivation_date <chr>, basic_name <chr>, basic_name_prefix <chr>, #> #   basic_organization_name <chr>, basic_organizational_subpart <chr>, #> #   basic_authorized_official_credential <chr>, #> #   basic_authorized_official_first_name <chr>, ‚Ä¶ npi_flatten(nyc, cols = c(\"basic\", \"taxonomies\")) #> # A tibble: 13 √ó 27 #>           npi basic_first_name basic_last_name basic_middle_na‚Ä¶ basic_credential #>         <int> <chr>            <chr>           <chr>            <chr>            #>  1 1083687214 SCOTT            RICHTER         JAY              O.D.             #>  2 1346224904 NA               NA              NA               NA               #>  3 1346224904 NA               NA              NA               NA               #>  4 1366405755 HAROLD           ORT             DAVID            DDS              #>  5 1588637987 CHUNG            SONG            YONG             OD               #>  6 1598295529 MUHAMMAD         ALVI            JUNAID           M.D              #>  7 1629046321 KENNETH          SCHNEIDER       LESLIE           MD               #>  8 1710977137 JOHN             SCROOPE         F.               M.S.W.           #>  9 1710977137 JOHN             SCROOPE         F.               M.S.W.           #> 10 1770554206 LYNN             KEPPEL          M                PA               #> 11 1851366066 BENJAMIN         FELDSHUH        NA               MD               #> 12 1992776843 NANCY            RAJSKY-STEED    LEE              RN NP            #> 13 1992776843 NANCY            RAJSKY-STEED    LEE              RN NP            #> # ‚Ä¶ with 22 more variables: basic_sole_proprietor <chr>, basic_gender <chr>, #> #   basic_enumeration_date <chr>, basic_last_updated <chr>, #> #   basic_reactivation_date <chr>, basic_status <chr>, #> #   basic_deactivation_date <chr>, basic_name <chr>, basic_name_prefix <chr>, #> #   basic_organization_name <chr>, basic_organizational_subpart <chr>, #> #   basic_authorized_official_credential <chr>, #> #   basic_authorized_official_first_name <chr>, ‚Ä¶"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Frank Farach. Maintainer, author. Sam Parmar. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Farach F (2022). npi: Access U.S. National Provider Identifier Registry API. https://github.com/frankfarach/npi, https://frankfarach.github.io/npi/.","code":"@Manual{,   title = {npi: Access the U.S. National Provider Identifier Registry API},   author = {Frank Farach},   year = {2022},   note = {https://github.com/frankfarach/npi, https://frankfarach.github.io/npi/}, }"},{"path":"/index.html","id":"npi-","dir":"","previous_headings":"","what":"Access the U.S. National Provider Identifier Registry API","title":"Access the U.S. National Provider Identifier Registry API","text":"Access U.S. National Provider Identifier Registry API Use R access U.S. National Provider Identifier (NPI) Registry API (v2.1) Center Medicare Medicaid Services (CMS): https://npiregistry.cms.hhs.gov/. Obtain rich administrative data linked specific individual organizational healthcare provider, perform advanced searches based provider name, location, type service, credentials, many attributes. npi provides convenience functions data extraction can spend less time wrangling data time putting data work.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access the U.S. National Provider Identifier Registry API","text":"Install npi directly Github using devtools package:","code":"devtools::install_github(\"frankfarach/npi\") library(npi)"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Access the U.S. National Provider Identifier Registry API","text":"npi exports four functions, match pattern ‚Äúnpi_*‚Äú: npi_search(): Search NPI Registry return response tibble high-cardinality data organized list columns. npi_summarize(): method displaying nice overview results npi_search(). npi_flatten(): method flattening one list columns search result, joined NPI number. npi_is_valid(): Check validity one NPI numbers using official NPI enumeration standard.","code":""},{"path":"/index.html","id":"search-the-registry","dir":"","previous_headings":"Usage","what":"Search the registry","title":"Access the U.S. National Provider Identifier Registry API","text":"npi_search() exposes nearly NPPES API‚Äôs search parameters. Let‚Äôs say wanted find 10 organizational providers primary locations New York City: full search results four regular vector columns, npi, provider_type, created_date, last_updated_date seven list columns. list column collection related data: basic: Basic profile information provider other_names: names used provider identifiers: provider identifiers credential information taxonomies: Service classification license information addresses: Location mailing address information practice_locations: Provider‚Äôs practice locations endpoints: Details provider‚Äôs endpoints health information exchange ‚Äôre comfortable working list columns, may need package. let‚Äôs stop just yet, npi provides convenience functions summarize extract data need.","code":"nyc <- npi_search(city = \"New York City\") nyc #> # A tibble: 10 √ó 11 #>       npi enumeration_type basic    other_names identifiers taxonomies addresses #>  *  <int> <chr>            <list>   <list>      <list>      <list>     <list>    #>  1 1.19e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  2 1.31e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  3 1.64e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  4 1.35e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  5 1.56e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  6 1.79e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  7 1.56e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  8 1.96e9 Organization     <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #>  9 1.43e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #> 10 1.33e9 Individual       <tibble> <tibble>    <tibble>    <tibble>   <tibble>  #> # ‚Ä¶ with 4 more variables: practice_locations <list>, endpoints <list>, #> #   created_date <dttm>, last_updated_date <dttm>"},{"path":"/index.html","id":"working-with-search-results","dir":"","previous_headings":"","what":"Working with search results","title":"Access the U.S. National Provider Identifier Registry API","text":"Run npi_summarize() results see human-readable overview ‚Äôve got: Suppose just want basic taxonomy information NPI result flattened data frame: can flatten whole thing prune back later: Now ‚Äôre ready whatever else need data. hood, npi_flatten() done lot data wrangling us: unnested specified list columns avoided potential naming collisions prefixing unnested names originating column name joined data together NPI","code":"npi_summarize(nyc) #> # A tibble: 10 √ó 6 #>           npi name      enumeration_type primary_practic‚Ä¶ phone primary_taxonomy #>         <int> <chr>     <chr>            <chr>            <chr> <chr>            #>  1 1194276360 ALYSSA C‚Ä¶ Individual       5 E 98TH ST FL ‚Ä¶ 212-‚Ä¶ Physician Assis‚Ä¶ #>  2 1306849641 MARK MOH‚Ä¶ Individual       16 PARK PL, NEW‚Ä¶ 212-‚Ä¶ Orthopaedic Sur‚Ä¶ #>  3 1639173065 SAKSHI D‚Ä¶ Individual       10 E 102ND ST, ‚Ä¶ 212-‚Ä¶ Internal Medici‚Ä¶ #>  4 1346604592 SARAH LO‚Ä¶ Individual       1335 DUBLIN RD ‚Ä¶ 614-‚Ä¶ Occupational Th‚Ä¶ #>  5 1558362566 AMY TIER‚Ä¶ Individual       1176 5TH AVE, N‚Ä¶ 212-‚Ä¶ Internal Medici‚Ä¶ #>  6 1790786416 NOAH GOL‚Ä¶ Individual       140 BERGEN STRE‚Ä¶ 973-‚Ä¶ Obstetrics & Gy‚Ä¶ #>  7 1558713628 ROBYN NO‚Ä¶ Individual       9 HOPE AVE STE ‚Ä¶ 781-‚Ä¶ Nurse Practitio‚Ä¶ #>  8 1962983775 LENOX HI‚Ä¶ Organization     100 E 77TH ST, ‚Ä¶ 212-‚Ä¶ Nurse Anestheti‚Ä¶ #>  9 1427454529 YONGHONG‚Ä¶ Individual       34 MAPLE ST, NO‚Ä¶ 203-‚Ä¶ Psychiatry & Ne‚Ä¶ #> 10 1326403213 RAJEE KR‚Ä¶ Individual       12401 E 17TH AV‚Ä¶ 347-‚Ä¶ Nurse Practitio‚Ä¶ npi_flatten(nyc, c(\"basic\", \"taxonomies\")) #> # A tibble: 20 √ó 26 #>           npi basic_first_name basic_last_name basic_credential basic_sole_prop‚Ä¶ #>         <int> <chr>            <chr>           <chr>            <chr>            #>  1 1194276360 ALYSSA           COWNAN          PA               NO               #>  2 1306849641 MARK             MOHRMANN        MD               NO               #>  3 1306849641 MARK             MOHRMANN        MD               NO               #>  4 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #>  5 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #>  6 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #>  7 1346604592 SARAH            LOWRY           OTR/L            YES              #>  8 1346604592 SARAH            LOWRY           OTR/L            YES              #>  9 1427454529 YONGHONG         TAN             <NA>             NO               #> 10 1558362566 AMY              TIERSTEN        M.D.             YES              #> 11 1558713628 ROBYN            NOHLING         FNP-BC, RD, LDN‚Ä¶ YES              #> 12 1558713628 ROBYN            NOHLING         FNP-BC, RD, LDN‚Ä¶ YES              #> 13 1558713628 ROBYN            NOHLING         FNP-BC, RD, LDN‚Ä¶ YES              #> 14 1558713628 ROBYN            NOHLING         FNP-BC, RD, LDN‚Ä¶ YES              #> 15 1558713628 ROBYN            NOHLING         FNP-BC, RD, LDN‚Ä¶ YES              #> 16 1558713628 ROBYN            NOHLING         FNP-BC, RD, LDN‚Ä¶ YES              #> 17 1639173065 SAKSHI           DUA             M.D.             YES              #> 18 1639173065 SAKSHI           DUA             M.D.             YES              #> 19 1790786416 NOAH             GOLDMAN         M.D.             NO               #> 20 1962983775 <NA>             <NA>            <NA>             <NA>             #> # ‚Ä¶ with 21 more variables: basic_gender <chr>, basic_enumeration_date <chr>, #> #   basic_last_updated <chr>, basic_status <chr>, basic_name <chr>, #> #   basic_name_prefix <chr>, basic_middle_name <chr>, #> #   basic_organization_name <chr>, basic_organizational_subpart <chr>, #> #   basic_authorized_official_credential <chr>, #> #   basic_authorized_official_first_name <chr>, #> #   basic_authorized_official_last_name <chr>, ‚Ä¶ npi_flatten(nyc) #> # A tibble: 48 √ó 42 #>           npi basic_first_name basic_last_name basic_credential basic_sole_prop‚Ä¶ #>         <int> <chr>            <chr>           <chr>            <chr>            #>  1 1194276360 ALYSSA           COWNAN          PA               NO               #>  2 1194276360 ALYSSA           COWNAN          PA               NO               #>  3 1306849641 MARK             MOHRMANN        MD               NO               #>  4 1306849641 MARK             MOHRMANN        MD               NO               #>  5 1306849641 MARK             MOHRMANN        MD               NO               #>  6 1306849641 MARK             MOHRMANN        MD               NO               #>  7 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #>  8 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #>  9 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #> 10 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #> # ‚Ä¶ with 38 more rows, and 37 more variables: basic_gender <chr>, #> #   basic_enumeration_date <chr>, basic_last_updated <chr>, basic_status <chr>, #> #   basic_name <chr>, basic_name_prefix <chr>, basic_middle_name <chr>, #> #   basic_organization_name <chr>, basic_organizational_subpart <chr>, #> #   basic_authorized_official_credential <chr>, #> #   basic_authorized_official_first_name <chr>, #> #   basic_authorized_official_last_name <chr>, ‚Ä¶"},{"path":"/index.html","id":"validating-npis","dir":"","previous_headings":"Working with search results","what":"Validating NPIs","title":"Access the U.S. National Provider Identifier Registry API","text":"Use npi_is_valid() check whether element vector candidate numbers valid NPI number: function doesn‚Äôt check whether NPI numbers activated deactivated (see #22).","code":"# Validate off NPIs npi_is_valid(c(1234567893, 1234567898)) #> [1] TRUE"},{"path":"/index.html","id":"set-your-own-user-agent","dir":"","previous_headings":"","what":"Set your own user agent","title":"Access the U.S. National Provider Identifier Registry API","text":"default, request headers include user agent references repository. can customize user agent setting npi_user_agent option:","code":"options(npi_user_agent = \"my_awesome_user_agent\")"},{"path":"/index.html","id":"package-website","dir":"","previous_headings":"","what":"Package Website","title":"Access the U.S. National Provider Identifier Registry API","text":"npi website release notes, documentation user functions, examples showing package can used.","code":""},{"path":"/index.html","id":"reporting-bugs","dir":"","previous_headings":"","what":"Reporting Bugs","title":"Access the U.S. National Provider Identifier Registry API","text":"spot bug? ‚Äôd love hear issues page.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Access the U.S. National Provider Identifier Registry API","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Access the U.S. National Provider Identifier Registry API","text":"Interested learning can contribute npi? Head contributor guide‚Äîthanks considering!","code":""},{"path":"/index.html","id":"how-to-cite-this-package","dir":"","previous_headings":"","what":"How to cite this package","title":"Access the U.S. National Provider Identifier Registry API","text":"latest citation, see Authors Citation page package website.","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Access the U.S. National Provider Identifier Registry API","text":"MIT (c) Frank Farach package‚Äôs logo licensed CC -SA 4.0 co-created Frank Farach Sam Parmar. logo uses modified version image Rod Asclepius magnifying glass attributed Evanherk, GFDL.","code":""},{"path":"/reference/new_npi_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct an npi_results S3 object ‚Äî new_npi_results","title":"Construct an npi_results S3 object ‚Äî new_npi_results","text":"Creates npi_results S3 object tibble. See validate_npi_results requirements class.","code":""},{"path":"/reference/new_npi_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct an npi_results S3 object ‚Äî new_npi_results","text":"","code":"new_npi_results(x, ...)"},{"path":"/reference/new_npi_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct an npi_results S3 object ‚Äî new_npi_results","text":"x tibble","code":""},{"path":"/reference/new_npi_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct an npi_results S3 object ‚Äî new_npi_results","text":"tibble S3 class npi_results","code":""},{"path":"/reference/npi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"npi: Access the U.S. National Provider Identifier Registry API ‚Äî npi-package","title":"npi: Access the U.S. National Provider Identifier Registry API ‚Äî npi-package","text":"Access United States National Provider Identifier Registry API (available) provide informative error messages .","code":""},{"path":"/reference/npi-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"npi: Access the U.S. National Provider Identifier Registry API ‚Äî npi-package","text":"npi makes easy search work data U.S. National Provider Identifier (NPI) Registry API (v2.1) directly R. Obtain rich administrative data linked specific individual organizational healthcare provider, perform advanced searches based provider name, location, type service, credentials, many attributes. npi provides convenience functions data extraction can spend less time wrangling data time putting data work. three functions likely need package. first npi_search, allows query NPI Registry returns 1,200 full NPI records data frame (tibble). Next, can use npi_summarize results obtain human-readable summary record. Finally, npi_flatten extracts flattens conceptually-related subsets data tibble joined `npi` column analysis-ready object.","code":""},{"path":"/reference/npi-package.html","id":"package-options","dir":"Reference","previous_headings":"","what":"Package options","title":"npi: Access the U.S. National Provider Identifier Registry API ‚Äî npi-package","text":"npi's default user agent URL package's GitHub   repository, https://www.github.com/frankfarach/npi. can customize   setting npi_user_agent option: options(npi_user_agent = \"your_user_agent_here\")","code":""},{"path":[]},{"path":"/reference/npi-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"npi: Access the U.S. National Provider Identifier Registry API ‚Äî npi-package","text":"Maintainer: Frank Farach frank.farach@gmail.com (ORCID) contributors: Sam Parmar parmartsam@gmail.com [contributor]","code":""},{"path":"/reference/npi_flatten.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to flatten an npi_results object ‚Äî npi_flatten","title":"S3 method to flatten an npi_results object ‚Äî npi_flatten","text":"S3 method flatten npi_results object","code":""},{"path":"/reference/npi_flatten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to flatten an npi_results object ‚Äî npi_flatten","text":"","code":"npi_flatten(df, cols, key)"},{"path":"/reference/npi_flatten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to flatten an npi_results object ‚Äî npi_flatten","text":"df data frame containing results call npi_search. cols non-NULL, named columns specified flattened returned along npi. key quoted column name df use matching key. default value \"npi\".","code":""},{"path":"/reference/npi_flatten.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to flatten an npi_results object ‚Äî npi_flatten","text":"","code":"# Flatten all list columns data(npis) npi_flatten(npis) #> Warning: The `.sep` argument of `unnest()` is deprecated as of tidyr 1.0.0. #> Use `names_sep = '_'` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. #> Warning: The `.sep` argument of `unnest()` is deprecated as of tidyr 1.0.0. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. #> # A tibble: 48 √ó 42 #>           npi basic_first_name basic_last_name basic_credential basic_sole_prop‚Ä¶ #>         <int> <chr>            <chr>           <chr>            <chr>            #>  1 1194276360 ALYSSA           COWNAN          PA               NO               #>  2 1194276360 ALYSSA           COWNAN          PA               NO               #>  3 1306849641 MARK             MOHRMANN        MD               NO               #>  4 1306849641 MARK             MOHRMANN        MD               NO               #>  5 1306849641 MARK             MOHRMANN        MD               NO               #>  6 1306849641 MARK             MOHRMANN        MD               NO               #>  7 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #>  8 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #>  9 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #> 10 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #> # ‚Ä¶ with 38 more rows, and 37 more variables: basic_gender <chr>, #> #   basic_enumeration_date <chr>, basic_last_updated <chr>, basic_status <chr>, #> #   basic_name <chr>, basic_name_prefix <chr>, basic_middle_name <chr>, #> #   basic_organization_name <chr>, basic_organizational_subpart <chr>, #> #   basic_authorized_official_credential <chr>, #> #   basic_authorized_official_first_name <chr>, #> #   basic_authorized_official_last_name <chr>, ‚Ä¶  # Only flatten specified columns npi_flatten(npis, cols = \"basic\") #> # A tibble: 10 √ó 20 #>           npi basic_first_name basic_last_name basic_credential basic_sole_prop‚Ä¶ #>         <int> <chr>            <chr>           <chr>            <chr>            #>  1 1194276360 ALYSSA           COWNAN          PA               NO               #>  2 1306849641 MARK             MOHRMANN        MD               NO               #>  3 1639173065 SAKSHI           DUA             M.D.             YES              #>  4 1346604592 SARAH            LOWRY           OTR/L            YES              #>  5 1558362566 AMY              TIERSTEN        M.D.             YES              #>  6 1790786416 NOAH             GOLDMAN         M.D.             NO               #>  7 1558713628 ROBYN            NOHLING         FNP-BC, RD, LDN‚Ä¶ YES              #>  8 1962983775 NA               NA              NA               NA               #>  9 1427454529 YONGHONG         TAN             NA               NO               #> 10 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #> # ‚Ä¶ with 15 more variables: basic_gender <chr>, basic_enumeration_date <chr>, #> #   basic_last_updated <chr>, basic_status <chr>, basic_name <chr>, #> #   basic_name_prefix <chr>, basic_middle_name <chr>, #> #   basic_organization_name <chr>, basic_organizational_subpart <chr>, #> #   basic_authorized_official_credential <chr>, #> #   basic_authorized_official_first_name <chr>, #> #   basic_authorized_official_last_name <chr>, ‚Ä¶ npi_flatten(npis, cols = c(\"basic\", \"identifiers\")) #> # A tibble: 12 √ó 25 #>           npi basic_first_name basic_last_name basic_credential basic_sole_prop‚Ä¶ #>         <int> <chr>            <chr>           <chr>            <chr>            #>  1 1194276360 ALYSSA           COWNAN          PA               NO               #>  2 1306849641 MARK             MOHRMANN        MD               NO               #>  3 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #>  4 1346604592 SARAH            LOWRY           OTR/L            YES              #>  5 1427454529 YONGHONG         TAN             NA               NO               #>  6 1558362566 AMY              TIERSTEN        M.D.             YES              #>  7 1558713628 ROBYN            NOHLING         FNP-BC, RD, LDN‚Ä¶ YES              #>  8 1639173065 SAKSHI           DUA             M.D.             YES              #>  9 1639173065 SAKSHI           DUA             M.D.             YES              #> 10 1639173065 SAKSHI           DUA             M.D.             YES              #> 11 1790786416 NOAH             GOLDMAN         M.D.             NO               #> 12 1962983775 NA               NA              NA               NA               #> # ‚Ä¶ with 20 more variables: basic_gender <chr>, basic_enumeration_date <chr>, #> #   basic_last_updated <chr>, basic_status <chr>, basic_name <chr>, #> #   basic_name_prefix <chr>, basic_middle_name <chr>, #> #   basic_organization_name <chr>, basic_organizational_subpart <chr>, #> #   basic_authorized_official_credential <chr>, #> #   basic_authorized_official_first_name <chr>, #> #   basic_authorized_official_last_name <chr>, ‚Ä¶"},{"path":"/reference/npi_flatten.npi_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten NPI search results ‚Äî npi_flatten.npi_results","title":"Flatten NPI search results ‚Äî npi_flatten.npi_results","text":"function takes npi_results S3 object returned npi_search flattens list columns. unnests lists columns left joins npi. can optionally specify columns df include.","code":""},{"path":"/reference/npi_flatten.npi_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten NPI search results ‚Äî npi_flatten.npi_results","text":"","code":"# S3 method for npi_results npi_flatten(df, cols = NULL, key = \"npi\")"},{"path":"/reference/npi_flatten.npi_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten NPI search results ‚Äî npi_flatten.npi_results","text":"df data frame containing results call npi_search. cols non-NULL, named columns specified flattened returned along npi. key quoted column name df use matching key. default value \"npi\".","code":""},{"path":"/reference/npi_flatten.npi_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten NPI search results ‚Äî npi_flatten.npi_results","text":"data frame (tibble) flattened list columns.","code":""},{"path":"/reference/npi_flatten.npi_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flatten NPI search results ‚Äî npi_flatten.npi_results","text":"names unnested columns prefixed name originating list column avoid name clashes show lineage. List columns containing NULL data absent result columns unnest.","code":""},{"path":"/reference/npi_flatten.npi_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flatten NPI search results ‚Äî npi_flatten.npi_results","text":"","code":"# Flatten all list columns data(npis) npi_flatten(npis) #> # A tibble: 48 √ó 42 #>           npi basic_first_name basic_last_name basic_credential basic_sole_prop‚Ä¶ #>         <int> <chr>            <chr>           <chr>            <chr>            #>  1 1194276360 ALYSSA           COWNAN          PA               NO               #>  2 1194276360 ALYSSA           COWNAN          PA               NO               #>  3 1306849641 MARK             MOHRMANN        MD               NO               #>  4 1306849641 MARK             MOHRMANN        MD               NO               #>  5 1306849641 MARK             MOHRMANN        MD               NO               #>  6 1306849641 MARK             MOHRMANN        MD               NO               #>  7 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #>  8 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #>  9 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #> 10 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #> # ‚Ä¶ with 38 more rows, and 37 more variables: basic_gender <chr>, #> #   basic_enumeration_date <chr>, basic_last_updated <chr>, basic_status <chr>, #> #   basic_name <chr>, basic_name_prefix <chr>, basic_middle_name <chr>, #> #   basic_organization_name <chr>, basic_organizational_subpart <chr>, #> #   basic_authorized_official_credential <chr>, #> #   basic_authorized_official_first_name <chr>, #> #   basic_authorized_official_last_name <chr>, ‚Ä¶  # Only flatten specified columns npi_flatten(npis, cols = \"basic\") #> # A tibble: 10 √ó 20 #>           npi basic_first_name basic_last_name basic_credential basic_sole_prop‚Ä¶ #>         <int> <chr>            <chr>           <chr>            <chr>            #>  1 1194276360 ALYSSA           COWNAN          PA               NO               #>  2 1306849641 MARK             MOHRMANN        MD               NO               #>  3 1639173065 SAKSHI           DUA             M.D.             YES              #>  4 1346604592 SARAH            LOWRY           OTR/L            YES              #>  5 1558362566 AMY              TIERSTEN        M.D.             YES              #>  6 1790786416 NOAH             GOLDMAN         M.D.             NO               #>  7 1558713628 ROBYN            NOHLING         FNP-BC, RD, LDN‚Ä¶ YES              #>  8 1962983775 NA               NA              NA               NA               #>  9 1427454529 YONGHONG         TAN             NA               NO               #> 10 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #> # ‚Ä¶ with 15 more variables: basic_gender <chr>, basic_enumeration_date <chr>, #> #   basic_last_updated <chr>, basic_status <chr>, basic_name <chr>, #> #   basic_name_prefix <chr>, basic_middle_name <chr>, #> #   basic_organization_name <chr>, basic_organizational_subpart <chr>, #> #   basic_authorized_official_credential <chr>, #> #   basic_authorized_official_first_name <chr>, #> #   basic_authorized_official_last_name <chr>, ‚Ä¶ npi_flatten(npis, cols = c(\"basic\", \"identifiers\")) #> # A tibble: 12 √ó 25 #>           npi basic_first_name basic_last_name basic_credential basic_sole_prop‚Ä¶ #>         <int> <chr>            <chr>           <chr>            <chr>            #>  1 1194276360 ALYSSA           COWNAN          PA               NO               #>  2 1306849641 MARK             MOHRMANN        MD               NO               #>  3 1326403213 RAJEE            KRAUSE          AGPCNP-C         NO               #>  4 1346604592 SARAH            LOWRY           OTR/L            YES              #>  5 1427454529 YONGHONG         TAN             NA               NO               #>  6 1558362566 AMY              TIERSTEN        M.D.             YES              #>  7 1558713628 ROBYN            NOHLING         FNP-BC, RD, LDN‚Ä¶ YES              #>  8 1639173065 SAKSHI           DUA             M.D.             YES              #>  9 1639173065 SAKSHI           DUA             M.D.             YES              #> 10 1639173065 SAKSHI           DUA             M.D.             YES              #> 11 1790786416 NOAH             GOLDMAN         M.D.             NO               #> 12 1962983775 NA               NA              NA               NA               #> # ‚Ä¶ with 20 more variables: basic_gender <chr>, basic_enumeration_date <chr>, #> #   basic_last_updated <chr>, basic_status <chr>, basic_name <chr>, #> #   basic_name_prefix <chr>, basic_middle_name <chr>, #> #   basic_organization_name <chr>, basic_organizational_subpart <chr>, #> #   basic_authorized_official_credential <chr>, #> #   basic_authorized_official_first_name <chr>, #> #   basic_authorized_official_last_name <chr>, ‚Ä¶"},{"path":"/reference/npi_is_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if candidate NPI number is valid ‚Äî npi_is_valid","title":"Check if candidate NPI number is valid ‚Äî npi_is_valid","text":"Check whether number valid NPI number per specifications detailed Final Rule Standard Unique Health Identifier Health Care Providers (69 FR 3434).","code":""},{"path":"/reference/npi_is_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if candidate NPI number is valid ‚Äî npi_is_valid","text":"","code":"npi_is_valid(x)"},{"path":"/reference/npi_is_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if candidate NPI number is valid ‚Äî npi_is_valid","text":"x 10-digit candidate NPI number","code":""},{"path":"/reference/npi_is_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if candidate NPI number is valid ‚Äî npi_is_valid","text":"Boolean indicating whether npi valid","code":""},{"path":[]},{"path":"/reference/npi_is_valid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if candidate NPI number is valid ‚Äî npi_is_valid","text":"","code":"npi_is_valid(1234567893) # TRUE #> [1] TRUE npi_is_valid(1234567898) # FALSE #> [1] FALSE"},{"path":"/reference/npi_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the NPI Registry ‚Äî npi_search","title":"Search the NPI Registry ‚Äî npi_search","text":"Search U.S. National Provider Identifier (NPI) Registry using parameters exposed registry's API (Version 2.1). Results combined returned tibble S3 class npi_results. See Value description returned object.","code":""},{"path":"/reference/npi_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the NPI Registry ‚Äî npi_search","text":"","code":"npi_search(   number = NULL,   enumeration_type = NULL,   taxonomy_description = NULL,   first_name = NULL,   last_name = NULL,   use_first_name_alias = NULL,   organization_name = NULL,   address_purpose = NULL,   city = NULL,   state = NULL,   postal_code = NULL,   country_code = NULL,   limit = 10L )"},{"path":"/reference/npi_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the NPI Registry ‚Äî npi_search","text":"number (Optional) 10-digit NPI number assigned provider. enumeration_type (Optional) Type provider associated NPI, one : \"ind\" Individual provider (NPI-1) \"org\" Organizational provider (NPI-2) taxonomy_description (Optional) Scalar character vector taxonomy description code NUCC Healthcare Provider Taxonomy. first_name (Optional) field applies Individual Providers. Trailing wildcard entries permitted requiring least two characters entered (e.g. \"jo*\" ). field allows following special characters: ampersand, apostrophe, colon, comma, forward slash, hyphen, left right parentheses, period, pound sign, quotation mark, semi-colon. last_name (Optional) field applies Individual Providers. Trailing wildcard entries permitted requiring least two characters entered. field allows following special characters: ampersand, apostrophe, colon, comma, forward slash, hyphen, left right parentheses, period, pound sign, quotation mark, semi-colon. use_first_name_alias (Optional) field applies Individual Providers wildcard search. set \"True\", search results include Providers similar First Names. E.g., first_name=Robert, also return Providers first name Rob, Bob, Robbie, Bobby, etc. Valid Values : TRUE: include alias/similar names; FALSE: look exact matches. organization_name (Optional) field applies Organizational Providers. Trailing wildcard entries permitted requiring least two characters entered. field allows following special characters: ampersand, apostrophe, \"\" sign, colon, comma, forward slash, hyphen, left right parentheses, period, pound sign, quotation mark, semi-colon. Organization Name Organization Name fields associated NPI examined matching contents, therefore, results might contain organization name different one entered Organization Name criterion. address_purpose Refers whether address information entered pertains provider's Mailing Address provider's Practice Location Address. specified, results contain providers either Mailing Address Practice Location Addresses match entered address information. Primary search Primary Location Address. Secondary search Secondary Location Addresses. Valid values : \"location\", \"mailing\", \"primary\", \"secondary\". city City associated provider's address identified Address Purpose. search Military Address enter either APO FPO City field. field allows following special characters: ampersand, apostrophe, colon, comma, forward slash, hyphen, left right parentheses, period, pound sign, quotation mark, semi-colon. state State abbreviation associated provider's address identified Address Purpose. field used input criterion. field used, least one field, besides Enumeration Type Country, must populated. Valid values states: https://npiregistry.cms.hhs.gov/registry/API-State-Abbr postal_code Postal Code associated provider's address identified Address Purpose. enter 5 digit postal code, match appropriate 9 digit (zip+4) codes data. Trailing wildcard entries permitted requiring least two characters entered (e.g., \"21*\"). country_code Country associated provider's address identified Address Purpose. field can used input criterion long value selected US (United States). Valid values country codes: https://npiregistry.cms.hhs.gov/registry/API-Country-Abbr limit Maximum number records return, 1 1200 inclusive. default 10. API returns 200 records per request, values limit greater 200 result multiple API calls.","code":""},{"path":"/reference/npi_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the NPI Registry ‚Äî npi_search","text":"Data frame (tibble) containing results search.","code":""},{"path":"/reference/npi_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the NPI Registry ‚Äî npi_search","text":"default, function requests 10 records, limit argument accepts values 1 API's limit 1200.","code":""},{"path":"/reference/npi_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search the NPI Registry ‚Äî npi_search","text":"https://npiregistry.cms.hhs.gov/registry/help-api NUCC Healthcare Provider Taxonomy","code":""},{"path":"/reference/npi_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the NPI Registry ‚Äî npi_search","text":"","code":"if (FALSE) { # 10 NPI records for New York City npi_search(city = \"New York City\")  # 1O NPI records for New York City, organizations only npi_search(city = \"New York City\", enumeration_type = \"org\")  # 1O NPI records for New York City, individuals only npi_search(city = \"New York City\", enumeration_type = \"ind\")  # 1200 NPI records for New York City npi_search(city = \"New York City\", limit = 1200)  # Nutritionists in Maine npi_search(state = \"ME\", taxonomy_description = \"Nutritionist\")  # Record associated with NPI 1245251222 npi_search(number = 1245251222) }"},{"path":"/reference/npi_summarize.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to summarize an npi_results object ‚Äî npi_summarize","title":"S3 method to summarize an npi_results object ‚Äî npi_summarize","text":"S3 method summarize npi_results object","code":""},{"path":"/reference/npi_summarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to summarize an npi_results object ‚Äî npi_summarize","text":"","code":"npi_summarize(object, ...)"},{"path":"/reference/npi_summarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to summarize an npi_results object ‚Äî npi_summarize","text":"object npi_results S3 object ... Additional optional arguments","code":""},{"path":"/reference/npi_summarize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to summarize an npi_results object ‚Äî npi_summarize","text":"","code":"data(npis) npi_summarize(npis) #> # A tibble: 10 √ó 6 #>           npi name      enumeration_type primary_practic‚Ä¶ phone primary_taxonomy #>         <int> <chr>     <chr>            <chr>            <chr> <chr>            #>  1 1194276360 ALYSSA C‚Ä¶ Individual       5 E 98TH ST FL ‚Ä¶ 212-‚Ä¶ Physician Assis‚Ä¶ #>  2 1306849641 MARK MOH‚Ä¶ Individual       16 PARK PL, NEW‚Ä¶ 212-‚Ä¶ Orthopaedic Sur‚Ä¶ #>  3 1639173065 SAKSHI D‚Ä¶ Individual       10 E 102ND ST, ‚Ä¶ 212-‚Ä¶ Internal Medici‚Ä¶ #>  4 1346604592 SARAH LO‚Ä¶ Individual       1335 DUBLIN RD ‚Ä¶ 614-‚Ä¶ Occupational Th‚Ä¶ #>  5 1558362566 AMY TIER‚Ä¶ Individual       1176 5TH AVE, N‚Ä¶ 212-‚Ä¶ Internal Medici‚Ä¶ #>  6 1790786416 NOAH GOL‚Ä¶ Individual       140 BERGEN STRE‚Ä¶ 973-‚Ä¶ Obstetrics & Gy‚Ä¶ #>  7 1558713628 ROBYN NO‚Ä¶ Individual       9 HOPE AVE STE ‚Ä¶ 781-‚Ä¶ Nurse Practitio‚Ä¶ #>  8 1962983775 LENOX HI‚Ä¶ Organization     100 E 77TH ST, ‚Ä¶ 212-‚Ä¶ Nurse Anestheti‚Ä¶ #>  9 1427454529 YONGHONG‚Ä¶ Individual       34 MAPLE ST, NO‚Ä¶ 203-‚Ä¶ Psychiatry & Ne‚Ä¶ #> 10 1326403213 RAJEE KR‚Ä¶ Individual       12401 E 17TH AV‚Ä¶ 347-‚Ä¶ Nurse Practitio‚Ä¶"},{"path":"/reference/npi_summarize.npi_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for npi_results S3 object ‚Äî npi_summarize.npi_results","title":"Summary method for npi_results S3 object ‚Äî npi_summarize.npi_results","text":"Print human-readable overview record return results call npi_search. format summary modeled one offered NPI registry website.","code":""},{"path":"/reference/npi_summarize.npi_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for npi_results S3 object ‚Äî npi_summarize.npi_results","text":"","code":"# S3 method for npi_results npi_summarize(object, ...)"},{"path":"/reference/npi_summarize.npi_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for npi_results S3 object ‚Äî npi_summarize.npi_results","text":"object npi_results S3 object ... Additional optional arguments","code":""},{"path":"/reference/npi_summarize.npi_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for npi_results S3 object ‚Äî npi_summarize.npi_results","text":"Tibble containing following columns: npi National Provider Identifier (NPI) number name Provider's first last name individual providers,       organization name organizational providers. enumeration_type Type provider associated NPI,       either \"Individual\" \"Organizational\" primary_practice_address Full address provider's       primary practice location phone Provider's telephone number primary_taxonomy Primary taxonomy description","code":""},{"path":"/reference/npi_summarize.npi_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary method for npi_results S3 object ‚Äî npi_summarize.npi_results","text":"","code":"data(npis) npi_summarize(npis) #> # A tibble: 10 √ó 6 #>           npi name      enumeration_type primary_practic‚Ä¶ phone primary_taxonomy #>         <int> <chr>     <chr>            <chr>            <chr> <chr>            #>  1 1194276360 ALYSSA C‚Ä¶ Individual       5 E 98TH ST FL ‚Ä¶ 212-‚Ä¶ Physician Assis‚Ä¶ #>  2 1306849641 MARK MOH‚Ä¶ Individual       16 PARK PL, NEW‚Ä¶ 212-‚Ä¶ Orthopaedic Sur‚Ä¶ #>  3 1639173065 SAKSHI D‚Ä¶ Individual       10 E 102ND ST, ‚Ä¶ 212-‚Ä¶ Internal Medici‚Ä¶ #>  4 1346604592 SARAH LO‚Ä¶ Individual       1335 DUBLIN RD ‚Ä¶ 614-‚Ä¶ Occupational Th‚Ä¶ #>  5 1558362566 AMY TIER‚Ä¶ Individual       1176 5TH AVE, N‚Ä¶ 212-‚Ä¶ Internal Medici‚Ä¶ #>  6 1790786416 NOAH GOL‚Ä¶ Individual       140 BERGEN STRE‚Ä¶ 973-‚Ä¶ Obstetrics & Gy‚Ä¶ #>  7 1558713628 ROBYN NO‚Ä¶ Individual       9 HOPE AVE STE ‚Ä¶ 781-‚Ä¶ Nurse Practitio‚Ä¶ #>  8 1962983775 LENOX HI‚Ä¶ Organization     100 E 77TH ST, ‚Ä¶ 212-‚Ä¶ Nurse Anestheti‚Ä¶ #>  9 1427454529 YONGHONG‚Ä¶ Individual       34 MAPLE ST, NO‚Ä¶ 203-‚Ä¶ Psychiatry & Ne‚Ä¶ #> 10 1326403213 RAJEE KR‚Ä¶ Individual       12401 E 17TH AV‚Ä¶ 347-‚Ä¶ Nurse Practitio‚Ä¶"},{"path":"/reference/npis.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample results from the NPI Registry ‚Äî npis","title":"Sample results from the NPI Registry ‚Äî npis","text":"dataset containing 10 records returned NPI Registry search providers primary address New York City.","code":""},{"path":"/reference/npis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample results from the NPI Registry ‚Äî npis","text":"","code":"npis"},{"path":"/reference/npis.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample results from the NPI Registry ‚Äî npis","text":"tibble 10 rows 11 columns, organized follows: npi [integer] 10-digit National Provider Identifier number enumeration_type [character] Type provider NPI, either     \"Individual\" \"Organizational\". basic [list 1 tibble] Basic information provider. other_names [list 0-n tibbles] names provider     goes . identifiers [list 0-50 tibbles] identifiers linked     NPI. taxonomies [list 0-15 tibbles] Healthcare Provider Taxonomy     classification. addresses [list 2 tibbles] Addresses provider's     primary practice location primary mailing address. practice_locations [list 0-n tibbles] Addresses     provider's practice locations. endpoints [list 0-n tibbles] Details provider's endpoints     health information exchange. created_date [datetime] Date NPI record first created (UTC). last_updated_date [datetime] UTC timestamp last time     NPI record updated.","code":""},{"path":"/reference/npis.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample results from the NPI Registry ‚Äî npis","text":"https://npiregistry.cms.hhs.gov/registry/help-api","code":""},{"path":"/reference/npis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample results from the NPI Registry ‚Äî npis","text":"search_npi(city = \"New York City\", limit = 10)","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator ‚Äî %>%","title":"Pipe operator ‚Äî %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator ‚Äî %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/validate_npi_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate input as S3 npi_results object ‚Äî validate_npi_results","title":"Validate input as S3 npi_results object ‚Äî validate_npi_results","text":"Accepts object, x, determines whether meets criteria S3 npi_results S3 object. criteria include tests data types, column names, class attributes. intentionally strict provide contract functions interact .","code":""},{"path":"/reference/validate_npi_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate input as S3 npi_results object ‚Äî validate_npi_results","text":"","code":"validate_npi_results(x, ...)"},{"path":[]}]
